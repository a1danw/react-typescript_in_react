{"version":3,"sources":["RickAndMortyApp/Context/Store.tsx","RickAndMortyApp/App.tsx","RickAndMortyApp/Context/actions.ts","RickAndMortyApp/pages/HomePage.tsx","RickAndMortyApp/pages/FavePage.tsx","index.tsx"],"names":["initialState","episodes","favourites","Store","React","createContext","reducer","state","action","type","payload","StoreProvider","props","useReducer","dispatch","Provider","value","children","App","useContext","className","to","length","fetchDataAction","a","fetch","data","json","dataJSON","_embedded","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","fav","id","EpisodeList","lazy","HomePage","useEffect","store","Suspense","fallback","FavePage","RouterPage","pageComponent","ReactDOM","render","path","document","getElementById"],"mappings":"6PAGMA,EAAuB,CAC3BC,SAAU,GACVC,WAAY,IAGDC,EAAQC,IAAMC,cAA4BL,GAEvD,SAASM,EAAQC,EAAeC,GAC9B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BAAKF,GAAZ,IAAmBN,SAAUO,EAAOE,UACtC,IAAK,UACH,OAAO,2BAAKH,GAAZ,IAAmBL,WAAW,GAAD,mBAAMK,EAAML,YAAZ,CAAwBM,EAAOE,YAC9D,IAAK,aACH,OAAO,2BAAKH,GAAZ,IAAmBL,WAAYM,EAAOE,UACxC,QACE,OAAOH,GAIN,SAASI,EAAcC,GAAa,IAAD,EACdR,IAAMS,WAAWP,EAASN,GADZ,mBACjCO,EADiC,KAC1BO,EAD0B,KAGxC,OACE,cAACX,EAAMY,SAAP,CAAgBC,MAAO,CAAET,QAAOO,YAAhC,SACGF,EAAMK,W,iBCvBE,SAASC,EAAIN,GAA0B,IAC5CL,EAAUY,qBAAWhB,GAArBI,MAER,OACE,qCACE,yBAAQa,UAAU,SAAlB,UACE,gCACE,gDACA,iEAEF,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,eAAC,IAAD,CAAMA,GAAG,cAAT,4BAAuCd,EAAML,WAAWoB,gBAG3DV,EAAMK,Y,4BClBAM,EAAe,uCAAG,WAAOT,GAAP,iBAAAU,EAAA,4DAE3B,6EAF2B,SAGVC,MADjB,8EAF2B,cAGvBC,EAHuB,gBAINA,EAAKC,OAJC,cAIvBC,EAJuB,yBAKtBd,EAAS,CACdL,KAAM,aACNC,QAASkB,EAASC,UAAU5B,YAPD,2CAAH,sDAWf6B,EAAkB,SAC7BvB,EACAO,EACAiB,GAEA,IAAMC,EAAezB,EAAML,WAAW+B,SAASF,GAC3CG,EAAc,CAChBzB,KAAM,UACNC,QAASqB,GAGPC,IAIFE,EAAc,CACZzB,KAAM,aACNC,QALwBH,EAAML,WAAWiC,QACzC,SAACC,GAAD,OAAcA,EAAIC,KAAON,EAAQM,QAOrC,OAAOvB,EAASoB,IC7BZI,EAAclC,IAAMmC,MAAU,kBAAM,gCAE3B,SAASC,IAAY,IAAD,EACLrB,qBAAWhB,GAA/BI,EADyB,EACzBA,MAAOO,EADkB,EAClBA,SAEf2B,qBAAU,WACkB,IAA1BlC,EAAMN,SAASqB,QAAgBC,EAAgBT,KAC9C,IAEH,IAAMF,EAAuB,CAC3BX,SAAUM,EAAMN,SAChByC,MAAO,CAAEnC,QAAOO,YAChBgB,kBACA5B,WAAYK,EAAML,YAGpB,OACE,mCACE,cAAC,IAAMyC,SAAP,CAAgBC,SAAU,6CAA1B,SACE,yBAASxB,UAAU,iBAAnB,SACE,cAACkB,EAAD,eAAiB1B,UCnB3B,IAAM0B,EAAclC,IAAMmC,MAAU,kBAAM,gCAE3B,SAASM,IAAyB,IAAD,EAClB1B,qBAAWhB,GAA/BI,EADsC,EACtCA,MAAOO,EAD+B,EAC/BA,SAETF,EAAuB,CAC3BX,SAAUM,EAAML,WAChBwC,MAAO,CAAEnC,QAAOO,YAChBgB,kBACA5B,WAAYK,EAAML,YAGpB,OACE,mCACE,cAAC,IAAMyC,SAAP,CAAgBC,SAAU,6CAA1B,SACE,qBAAKxB,UAAU,iBAAf,SACE,cAAC,EAAD,eAAiBR,UCX3B,IAAMkC,EAAa,SACjBlC,GADiB,OAEdA,EAAMmC,eAEXC,IAASC,OACP,cAACtC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,EAAD,CAAKuC,KAAK,IAAV,UACE,cAACJ,EAAD,CAAYC,cAAe,cAACP,EAAD,IAAcU,KAAK,MAC9C,cAACJ,EAAD,CAAYC,cAAe,cAACF,EAAD,IAAcK,KAAK,kBAIpDC,SAASC,eAAe,W","file":"static/js/main.c75fc599.chunk.js","sourcesContent":["import React from \"react\";\nimport { IAction, IState } from \"../Context/interfaces\";\n\nconst initialState: IState = {\n  episodes: [],\n  favourites: [],\n};\n\nexport const Store = React.createContext<IState | any>(initialState);\n\nfunction reducer(state: IState, action: IAction): IState {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return { ...state, episodes: action.payload };\n    case \"ADD_FAV\":\n      return { ...state, favourites: [...state.favourites, action.payload] };\n    case \"REMOVE_FAV\":\n      return { ...state, favourites: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props: any) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  // pass\n  return (\n    <Store.Provider value={{ state, dispatch }}>\n      {props.children}\n    </Store.Provider>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { Store } from \"./Context/Store\";\nimport { Link } from \"@reach/router\";\nimport \"./App.css\";\n\nexport default function App(props: any): JSX.Element {\n  const { state } = useContext(Store);\n\n  return (\n    <>\n      <header className=\"header\">\n        <div>\n          <h1>Rick and Morty</h1>\n          <p>Pick your favourite episode!!</p>\n        </div>\n        <div>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/favourites\"> Favourite(s): {state.favourites.length}</Link>\n        </div>\n      </header>\n      {props.children}\n    </>\n  );\n}\n","import { IAction, IEpisode, IState } from \"../Context/interfaces\";\n\nexport const fetchDataAction = async (dispatch: any) => {\n  const URL =\n    \"https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty===&embed=episodes\";\n  const data = await fetch(URL);\n  const dataJSON = await data.json();\n  return dispatch({\n    type: \"FETCH_DATA\",\n    payload: dataJSON._embedded.episodes,\n  });\n};\n\nexport const toggleFavAction = (\n  state: IState,\n  dispatch: any,\n  episode: IEpisode | any\n): IAction => {\n  const episodeInFav = state.favourites.includes(episode); // return true or false\n  let dispatchObj = {\n    type: \"ADD_FAV\",\n    payload: episode,\n  };\n\n  if (episodeInFav) {\n    const favWithoutEpisode = state.favourites.filter(\n      (fav: any) => fav.id !== episode.id\n    );\n    dispatchObj = {\n      type: \"REMOVE_FAV\",\n      payload: favWithoutEpisode,\n    };\n  }\n  return dispatch(dispatchObj);\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { Store } from \"../Context/Store\";\nimport { IEpisodeProps } from \"../Context/interfaces\";\nimport { fetchDataAction, toggleFavAction } from \"../Context/actions\";\nconst EpisodeList = React.lazy<any>(() => import(\"../components/EpisodeList\"));\n\nexport default function HomePage() {\n  const { state, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    state.episodes.length === 0 && fetchDataAction(dispatch);\n  }, []);\n\n  const props: IEpisodeProps = {\n    episodes: state.episodes,\n    store: { state, dispatch },\n    toggleFavAction,\n    favourites: state.favourites,\n  };\n\n  return (\n    <>\n      <React.Suspense fallback={<div>loading...</div>}>\n        <section className=\"episode-layout\">\n          <EpisodeList {...props} />\n        </section>\n      </React.Suspense>\n    </>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { Store } from \"../Context/Store\";\nimport { IEpisodeProps } from \"../Context/interfaces\";\nimport { toggleFavAction } from \"../Context/actions\";\n\nconst EpisodeList = React.lazy<any>(() => import(\"../components/EpisodeList\"));\n\nexport default function FavePage(): JSX.Element {\n  const { state, dispatch } = useContext(Store);\n\n  const props: IEpisodeProps = {\n    episodes: state.favourites,\n    store: { state, dispatch },\n    toggleFavAction,\n    favourites: state.favourites,\n  };\n\n  return (\n    <>\n      <React.Suspense fallback={<div>loading...</div>}>\n        <div className=\"episode-layout\">\n          <EpisodeList {...props} />\n        </div>\n      </React.Suspense>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./BasketballListApp/App\";\nimport App from \"./RickAndMortyApp/App\";\nimport { Router, RouteComponentProps } from \"@reach/router\";\nimport { StoreProvider } from \"./RickAndMortyApp/Context/Store\";\nimport HomePage from \"./RickAndMortyApp/pages/HomePage\";\nimport FavePage from \"./RickAndMortyApp/pages/FavePage\";\n\nconst RouterPage = (\n  props: { pageComponent: JSX.Element } & RouteComponentProps\n) => props.pageComponent;\n\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <App path=\"/\">\n        <RouterPage pageComponent={<HomePage />} path=\"/\" />\n        <RouterPage pageComponent={<FavePage />} path=\"/faves\" />\n      </App>\n    </Router>\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}